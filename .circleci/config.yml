version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.1
        environment:
          PGHOST: 127.0.0.1
          PGUSER: frogogo-api_test
          RAILS_ENV: test
      - image: circleci/postgres:9.5.14
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: frogogo-api_test
          POSTGRES_PASSWORD: password

    working_directory: ~/frogogo-api-circleci

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results

            bundle exec rspec --format progress \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ];
              then bundle exec cap production deploy
            fi
